// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mgroup3ParserData.proto

// Protobuf Java Version: 3.25.8
package com.giyeok.jparser.mgroup3.proto;

/**
 * Protobuf type {@code com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate}
 */
public final class AcceptConditionTemplate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)
    AcceptConditionTemplateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AcceptConditionTemplate.newBuilder() to construct.
  private AcceptConditionTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AcceptConditionTemplate() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AcceptConditionTemplate();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_AcceptConditionTemplate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_AcceptConditionTemplate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.class, com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.Builder.class);
  }

  private int conditionCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object condition_;
  public enum ConditionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ALWAYS(1),
    AND(2),
    OR(3),
    NO_LONGER_MATCH(4),
    LOOKAHEAD_FOUND(5),
    LOOKAHEAD_NOTFOUND(6),
    EXCEPT(7),
    JOIN(8),
    CONDITION_NOT_SET(0);
    private final int value;
    private ConditionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConditionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ConditionCase forNumber(int value) {
      switch (value) {
        case 1: return ALWAYS;
        case 2: return AND;
        case 3: return OR;
        case 4: return NO_LONGER_MATCH;
        case 5: return LOOKAHEAD_FOUND;
        case 6: return LOOKAHEAD_NOTFOUND;
        case 7: return EXCEPT;
        case 8: return JOIN;
        case 0: return CONDITION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ConditionCase
  getConditionCase() {
    return ConditionCase.forNumber(
        conditionCase_);
  }

  public static final int ALWAYS_FIELD_NUMBER = 1;
  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   * @return Whether the always field is set.
   */
  @java.lang.Override
  public boolean hasAlways() {
    return conditionCase_ == 1;
  }
  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   * @return The always.
   */
  @java.lang.Override
  public com.google.protobuf.Empty getAlways() {
    if (conditionCase_ == 1) {
       return (com.google.protobuf.Empty) condition_;
    }
    return com.google.protobuf.Empty.getDefaultInstance();
  }
  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.EmptyOrBuilder getAlwaysOrBuilder() {
    if (conditionCase_ == 1) {
       return (com.google.protobuf.Empty) condition_;
    }
    return com.google.protobuf.Empty.getDefaultInstance();
  }

  public static final int AND_FIELD_NUMBER = 2;
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
   * @return Whether the and field is set.
   */
  @java.lang.Override
  public boolean hasAnd() {
    return conditionCase_ == 2;
  }
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
   * @return The and.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions getAnd() {
    if (conditionCase_ == 2) {
       return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
  }
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder getAndOrBuilder() {
    if (conditionCase_ == 2) {
       return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
  }

  public static final int OR_FIELD_NUMBER = 3;
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
   * @return Whether the or field is set.
   */
  @java.lang.Override
  public boolean hasOr() {
    return conditionCase_ == 3;
  }
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
   * @return The or.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions getOr() {
    if (conditionCase_ == 3) {
       return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
  }
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder getOrOrBuilder() {
    if (conditionCase_ == 3) {
       return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
  }

  public static final int NO_LONGER_MATCH_FIELD_NUMBER = 4;
  /**
   * <pre>
   * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
   * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
   * </pre>
   *
   * <code>int32 no_longer_match = 4;</code>
   * @return Whether the noLongerMatch field is set.
   */
  @java.lang.Override
  public boolean hasNoLongerMatch() {
    return conditionCase_ == 4;
  }
  /**
   * <pre>
   * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
   * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
   * </pre>
   *
   * <code>int32 no_longer_match = 4;</code>
   * @return The noLongerMatch.
   */
  @java.lang.Override
  public int getNoLongerMatch() {
    if (conditionCase_ == 4) {
      return (java.lang.Integer) condition_;
    }
    return 0;
  }

  public static final int LOOKAHEAD_FOUND_FIELD_NUMBER = 5;
  /**
   * <pre>
   * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>int32 lookahead_found = 5;</code>
   * @return Whether the lookaheadFound field is set.
   */
  @java.lang.Override
  public boolean hasLookaheadFound() {
    return conditionCase_ == 5;
  }
  /**
   * <pre>
   * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>int32 lookahead_found = 5;</code>
   * @return The lookaheadFound.
   */
  @java.lang.Override
  public int getLookaheadFound() {
    if (conditionCase_ == 5) {
      return (java.lang.Integer) condition_;
    }
    return 0;
  }

  public static final int LOOKAHEAD_NOTFOUND_FIELD_NUMBER = 6;
  /**
   * <pre>
   * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>int32 lookahead_notfound = 6;</code>
   * @return Whether the lookaheadNotfound field is set.
   */
  @java.lang.Override
  public boolean hasLookaheadNotfound() {
    return conditionCase_ == 6;
  }
  /**
   * <pre>
   * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>int32 lookahead_notfound = 6;</code>
   * @return The lookaheadNotfound.
   */
  @java.lang.Override
  public int getLookaheadNotfound() {
    if (conditionCase_ == 6) {
      return (java.lang.Integer) condition_;
    }
    return 0;
  }

  public static final int EXCEPT_FIELD_NUMBER = 7;
  /**
   * <pre>
   * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>int32 except = 7;</code>
   * @return Whether the except field is set.
   */
  @java.lang.Override
  public boolean hasExcept() {
    return conditionCase_ == 7;
  }
  /**
   * <pre>
   * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>int32 except = 7;</code>
   * @return The except.
   */
  @java.lang.Override
  public int getExcept() {
    if (conditionCase_ == 7) {
      return (java.lang.Integer) condition_;
    }
    return 0;
  }

  public static final int JOIN_FIELD_NUMBER = 8;
  /**
   * <pre>
   * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>int32 join = 8;</code>
   * @return Whether the join field is set.
   */
  @java.lang.Override
  public boolean hasJoin() {
    return conditionCase_ == 8;
  }
  /**
   * <pre>
   * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>int32 join = 8;</code>
   * @return The join.
   */
  @java.lang.Override
  public int getJoin() {
    if (conditionCase_ == 8) {
      return (java.lang.Integer) condition_;
    }
    return 0;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (conditionCase_ == 1) {
      output.writeMessage(1, (com.google.protobuf.Empty) condition_);
    }
    if (conditionCase_ == 2) {
      output.writeMessage(2, (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_);
    }
    if (conditionCase_ == 3) {
      output.writeMessage(3, (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_);
    }
    if (conditionCase_ == 4) {
      output.writeInt32(
          4, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 5) {
      output.writeInt32(
          5, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 6) {
      output.writeInt32(
          6, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 7) {
      output.writeInt32(
          7, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 8) {
      output.writeInt32(
          8, (int)((java.lang.Integer) condition_));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (conditionCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.protobuf.Empty) condition_);
    }
    if (conditionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_);
    }
    if (conditionCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_);
    }
    if (conditionCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            4, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            5, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            6, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            7, (int)((java.lang.Integer) condition_));
    }
    if (conditionCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            8, (int)((java.lang.Integer) condition_));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)) {
      return super.equals(obj);
    }
    com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate other = (com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate) obj;

    if (!getConditionCase().equals(other.getConditionCase())) return false;
    switch (conditionCase_) {
      case 1:
        if (!getAlways()
            .equals(other.getAlways())) return false;
        break;
      case 2:
        if (!getAnd()
            .equals(other.getAnd())) return false;
        break;
      case 3:
        if (!getOr()
            .equals(other.getOr())) return false;
        break;
      case 4:
        if (getNoLongerMatch()
            != other.getNoLongerMatch()) return false;
        break;
      case 5:
        if (getLookaheadFound()
            != other.getLookaheadFound()) return false;
        break;
      case 6:
        if (getLookaheadNotfound()
            != other.getLookaheadNotfound()) return false;
        break;
      case 7:
        if (getExcept()
            != other.getExcept()) return false;
        break;
      case 8:
        if (getJoin()
            != other.getJoin()) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (conditionCase_) {
      case 1:
        hash = (37 * hash) + ALWAYS_FIELD_NUMBER;
        hash = (53 * hash) + getAlways().hashCode();
        break;
      case 2:
        hash = (37 * hash) + AND_FIELD_NUMBER;
        hash = (53 * hash) + getAnd().hashCode();
        break;
      case 3:
        hash = (37 * hash) + OR_FIELD_NUMBER;
        hash = (53 * hash) + getOr().hashCode();
        break;
      case 4:
        hash = (37 * hash) + NO_LONGER_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getNoLongerMatch();
        break;
      case 5:
        hash = (37 * hash) + LOOKAHEAD_FOUND_FIELD_NUMBER;
        hash = (53 * hash) + getLookaheadFound();
        break;
      case 6:
        hash = (37 * hash) + LOOKAHEAD_NOTFOUND_FIELD_NUMBER;
        hash = (53 * hash) + getLookaheadNotfound();
        break;
      case 7:
        hash = (37 * hash) + EXCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getExcept();
        break;
      case 8:
        hash = (37 * hash) + JOIN_FIELD_NUMBER;
        hash = (53 * hash) + getJoin();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)
      com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_AcceptConditionTemplate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_AcceptConditionTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.class, com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.Builder.class);
    }

    // Construct using com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (alwaysBuilder_ != null) {
        alwaysBuilder_.clear();
      }
      if (andBuilder_ != null) {
        andBuilder_.clear();
      }
      if (orBuilder_ != null) {
        orBuilder_.clear();
      }
      conditionCase_ = 0;
      condition_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_AcceptConditionTemplate_descriptor;
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate getDefaultInstanceForType() {
      return com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.getDefaultInstance();
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate build() {
      com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate buildPartial() {
      com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate result = new com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate result) {
      result.conditionCase_ = conditionCase_;
      result.condition_ = this.condition_;
      if (conditionCase_ == 1 &&
          alwaysBuilder_ != null) {
        result.condition_ = alwaysBuilder_.build();
      }
      if (conditionCase_ == 2 &&
          andBuilder_ != null) {
        result.condition_ = andBuilder_.build();
      }
      if (conditionCase_ == 3 &&
          orBuilder_ != null) {
        result.condition_ = orBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate) {
        return mergeFrom((com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate other) {
      if (other == com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.getDefaultInstance()) return this;
      switch (other.getConditionCase()) {
        case ALWAYS: {
          mergeAlways(other.getAlways());
          break;
        }
        case AND: {
          mergeAnd(other.getAnd());
          break;
        }
        case OR: {
          mergeOr(other.getOr());
          break;
        }
        case NO_LONGER_MATCH: {
          setNoLongerMatch(other.getNoLongerMatch());
          break;
        }
        case LOOKAHEAD_FOUND: {
          setLookaheadFound(other.getLookaheadFound());
          break;
        }
        case LOOKAHEAD_NOTFOUND: {
          setLookaheadNotfound(other.getLookaheadNotfound());
          break;
        }
        case EXCEPT: {
          setExcept(other.getExcept());
          break;
        }
        case JOIN: {
          setJoin(other.getJoin());
          break;
        }
        case CONDITION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAlwaysFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getAndFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getOrFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 3;
              break;
            } // case 26
            case 32: {
              condition_ = input.readInt32();
              conditionCase_ = 4;
              break;
            } // case 32
            case 40: {
              condition_ = input.readInt32();
              conditionCase_ = 5;
              break;
            } // case 40
            case 48: {
              condition_ = input.readInt32();
              conditionCase_ = 6;
              break;
            } // case 48
            case 56: {
              condition_ = input.readInt32();
              conditionCase_ = 7;
              break;
            } // case 56
            case 64: {
              condition_ = input.readInt32();
              conditionCase_ = 8;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int conditionCase_ = 0;
    private java.lang.Object condition_;
    public ConditionCase
        getConditionCase() {
      return ConditionCase.forNumber(
          conditionCase_);
    }

    public Builder clearCondition() {
      conditionCase_ = 0;
      condition_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Empty, com.google.protobuf.Empty.Builder, com.google.protobuf.EmptyOrBuilder> alwaysBuilder_;
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     * @return Whether the always field is set.
     */
    @java.lang.Override
    public boolean hasAlways() {
      return conditionCase_ == 1;
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     * @return The always.
     */
    @java.lang.Override
    public com.google.protobuf.Empty getAlways() {
      if (alwaysBuilder_ == null) {
        if (conditionCase_ == 1) {
          return (com.google.protobuf.Empty) condition_;
        }
        return com.google.protobuf.Empty.getDefaultInstance();
      } else {
        if (conditionCase_ == 1) {
          return alwaysBuilder_.getMessage();
        }
        return com.google.protobuf.Empty.getDefaultInstance();
      }
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    public Builder setAlways(com.google.protobuf.Empty value) {
      if (alwaysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        alwaysBuilder_.setMessage(value);
      }
      conditionCase_ = 1;
      return this;
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    public Builder setAlways(
        com.google.protobuf.Empty.Builder builderForValue) {
      if (alwaysBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        alwaysBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 1;
      return this;
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    public Builder mergeAlways(com.google.protobuf.Empty value) {
      if (alwaysBuilder_ == null) {
        if (conditionCase_ == 1 &&
            condition_ != com.google.protobuf.Empty.getDefaultInstance()) {
          condition_ = com.google.protobuf.Empty.newBuilder((com.google.protobuf.Empty) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 1) {
          alwaysBuilder_.mergeFrom(value);
        } else {
          alwaysBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 1;
      return this;
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    public Builder clearAlways() {
      if (alwaysBuilder_ == null) {
        if (conditionCase_ == 1) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 1) {
          conditionCase_ = 0;
          condition_ = null;
        }
        alwaysBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    public com.google.protobuf.Empty.Builder getAlwaysBuilder() {
      return getAlwaysFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.EmptyOrBuilder getAlwaysOrBuilder() {
      if ((conditionCase_ == 1) && (alwaysBuilder_ != null)) {
        return alwaysBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 1) {
          return (com.google.protobuf.Empty) condition_;
        }
        return com.google.protobuf.Empty.getDefaultInstance();
      }
    }
    /**
     * <code>.google.protobuf.Empty always = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Empty, com.google.protobuf.Empty.Builder, com.google.protobuf.EmptyOrBuilder> 
        getAlwaysFieldBuilder() {
      if (alwaysBuilder_ == null) {
        if (!(conditionCase_ == 1)) {
          condition_ = com.google.protobuf.Empty.getDefaultInstance();
        }
        alwaysBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Empty, com.google.protobuf.Empty.Builder, com.google.protobuf.EmptyOrBuilder>(
                (com.google.protobuf.Empty) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 1;
      onChanged();
      return alwaysBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder> andBuilder_;
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     * @return Whether the and field is set.
     */
    @java.lang.Override
    public boolean hasAnd() {
      return conditionCase_ == 2;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     * @return The and.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions getAnd() {
      if (andBuilder_ == null) {
        if (conditionCase_ == 2) {
          return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      } else {
        if (conditionCase_ == 2) {
          return andBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      }
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    public Builder setAnd(com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions value) {
      if (andBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        andBuilder_.setMessage(value);
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    public Builder setAnd(
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder builderForValue) {
      if (andBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        andBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    public Builder mergeAnd(com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions value) {
      if (andBuilder_ == null) {
        if (conditionCase_ == 2 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.newBuilder((com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 2) {
          andBuilder_.mergeFrom(value);
        } else {
          andBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    public Builder clearAnd() {
      if (andBuilder_ == null) {
        if (conditionCase_ == 2) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 2) {
          conditionCase_ = 0;
          condition_ = null;
        }
        andBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder getAndBuilder() {
      return getAndFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder getAndOrBuilder() {
      if ((conditionCase_ == 2) && (andBuilder_ != null)) {
        return andBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 2) {
          return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      }
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions and = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder> 
        getAndFieldBuilder() {
      if (andBuilder_ == null) {
        if (!(conditionCase_ == 2)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
        }
        andBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 2;
      onChanged();
      return andBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder> orBuilder_;
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     * @return Whether the or field is set.
     */
    @java.lang.Override
    public boolean hasOr() {
      return conditionCase_ == 3;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     * @return The or.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions getOr() {
      if (orBuilder_ == null) {
        if (conditionCase_ == 3) {
          return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      } else {
        if (conditionCase_ == 3) {
          return orBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      }
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    public Builder setOr(com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions value) {
      if (orBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        orBuilder_.setMessage(value);
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    public Builder setOr(
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder builderForValue) {
      if (orBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        orBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    public Builder mergeOr(com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions value) {
      if (orBuilder_ == null) {
        if (conditionCase_ == 3 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.newBuilder((com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 3) {
          orBuilder_.mergeFrom(value);
        } else {
          orBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    public Builder clearOr() {
      if (orBuilder_ == null) {
        if (conditionCase_ == 3) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 3) {
          conditionCase_ = 0;
          condition_ = null;
        }
        orBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder getOrBuilder() {
      return getOrFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder getOrOrBuilder() {
      if ((conditionCase_ == 3) && (orBuilder_ != null)) {
        return orBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 3) {
          return (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
      }
    }
    /**
     * <code>.com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions or = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder> 
        getOrFieldBuilder() {
      if (orBuilder_ == null) {
        if (!(conditionCase_ == 3)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.getDefaultInstance();
        }
        orBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions.Builder, com.giyeok.jparser.mgroup3.proto.MultiAcceptConditionsOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.MultiAcceptConditions) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 3;
      onChanged();
      return orBuilder_;
    }

    /**
     * <pre>
     * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
     * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
     * </pre>
     *
     * <code>int32 no_longer_match = 4;</code>
     * @return Whether the noLongerMatch field is set.
     */
    public boolean hasNoLongerMatch() {
      return conditionCase_ == 4;
    }
    /**
     * <pre>
     * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
     * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
     * </pre>
     *
     * <code>int32 no_longer_match = 4;</code>
     * @return The noLongerMatch.
     */
    public int getNoLongerMatch() {
      if (conditionCase_ == 4) {
        return (java.lang.Integer) condition_;
      }
      return 0;
    }
    /**
     * <pre>
     * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
     * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
     * </pre>
     *
     * <code>int32 no_longer_match = 4;</code>
     * @param value The noLongerMatch to set.
     * @return This builder for chaining.
     */
    public Builder setNoLongerMatch(int value) {

      conditionCase_ = 4;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되는 경우가 있으면 이번 path는 invalidate한다
     * (정확히는, longest 심볼의 PathStarter로부터 만들어진 경로가 이후에 finish되면 그 때 조건의 negation을 and로 붙인다)
     * </pre>
     *
     * <code>int32 no_longer_match = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNoLongerMatch() {
      if (conditionCase_ == 4) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>int32 lookahead_found = 5;</code>
     * @return Whether the lookaheadFound field is set.
     */
    public boolean hasLookaheadFound() {
      return conditionCase_ == 5;
    }
    /**
     * <pre>
     * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>int32 lookahead_found = 5;</code>
     * @return The lookaheadFound.
     */
    public int getLookaheadFound() {
      if (conditionCase_ == 5) {
        return (java.lang.Integer) condition_;
      }
      return 0;
    }
    /**
     * <pre>
     * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>int32 lookahead_found = 5;</code>
     * @param value The lookaheadFound to set.
     * @return This builder for chaining.
     */
    public Builder setLookaheadFound(int value) {

      conditionCase_ = 5;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * lookahead_found 심볼의 PathStarter로부터 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>int32 lookahead_found = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLookaheadFound() {
      if (conditionCase_ == 5) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>int32 lookahead_notfound = 6;</code>
     * @return Whether the lookaheadNotfound field is set.
     */
    public boolean hasLookaheadNotfound() {
      return conditionCase_ == 6;
    }
    /**
     * <pre>
     * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>int32 lookahead_notfound = 6;</code>
     * @return The lookaheadNotfound.
     */
    public int getLookaheadNotfound() {
      if (conditionCase_ == 6) {
        return (java.lang.Integer) condition_;
      }
      return 0;
    }
    /**
     * <pre>
     * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>int32 lookahead_notfound = 6;</code>
     * @param value The lookaheadNotfound to set.
     * @return This builder for chaining.
     */
    public Builder setLookaheadNotfound(int value) {

      conditionCase_ = 6;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * lookahead_notfound 심볼의 PathStarter로부터 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>int32 lookahead_notfound = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLookaheadNotfound() {
      if (conditionCase_ == 6) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>int32 except = 7;</code>
     * @return Whether the except field is set.
     */
    public boolean hasExcept() {
      return conditionCase_ == 7;
    }
    /**
     * <pre>
     * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>int32 except = 7;</code>
     * @return The except.
     */
    public int getExcept() {
      if (conditionCase_ == 7) {
        return (java.lang.Integer) condition_;
      }
      return 0;
    }
    /**
     * <pre>
     * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>int32 except = 7;</code>
     * @param value The except to set.
     * @return This builder for chaining.
     */
    public Builder setExcept(int value) {

      conditionCase_ = 7;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * except 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>int32 except = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearExcept() {
      if (conditionCase_ == 7) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>int32 join = 8;</code>
     * @return Whether the join field is set.
     */
    public boolean hasJoin() {
      return conditionCase_ == 8;
    }
    /**
     * <pre>
     * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>int32 join = 8;</code>
     * @return The join.
     */
    public int getJoin() {
      if (conditionCase_ == 8) {
        return (java.lang.Integer) condition_;
      }
      return 0;
    }
    /**
     * <pre>
     * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>int32 join = 8;</code>
     * @param value The join to set.
     * @return This builder for chaining.
     */
    public Builder setJoin(int value) {

      conditionCase_ = 8;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * join 심볼의 PathStarter로부터 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>int32 join = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearJoin() {
      if (conditionCase_ == 8) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)
  }

  // @@protoc_insertion_point(class_scope:com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)
  private static final com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate();
  }

  public static com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AcceptConditionTemplate>
      PARSER = new com.google.protobuf.AbstractParser<AcceptConditionTemplate>() {
    @java.lang.Override
    public AcceptConditionTemplate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AcceptConditionTemplate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AcceptConditionTemplate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

