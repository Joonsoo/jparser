// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mgroup3ParserData.proto

package com.giyeok.jparser.mgroup3.proto;

public interface AcceptConditionTemplateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   * @return Whether the always field is set.
   */
  boolean hasAlways();
  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   * @return The always.
   */
  com.google.protobuf.Empty getAlways();
  /**
   * <code>.google.protobuf.Empty always = 1;</code>
   */
  com.google.protobuf.EmptyOrBuilder getAlwaysOrBuilder();

  /**
   * <code>.google.protobuf.Empty never = 2;</code>
   * @return Whether the never field is set.
   */
  boolean hasNever();
  /**
   * <code>.google.protobuf.Empty never = 2;</code>
   * @return The never.
   */
  com.google.protobuf.Empty getNever();
  /**
   * <code>.google.protobuf.Empty never = 2;</code>
   */
  com.google.protobuf.EmptyOrBuilder getNeverOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.AndTemplate and = 3;</code>
   * @return Whether the and field is set.
   */
  boolean hasAnd();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.AndTemplate and = 3;</code>
   * @return The and.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.AndTemplate getAnd();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.AndTemplate and = 3;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.AndTemplateOrBuilder getAndOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OrTemplate or = 4;</code>
   * @return Whether the or field is set.
   */
  boolean hasOr();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OrTemplate or = 4;</code>
   * @return The or.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OrTemplate getOr();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OrTemplate or = 4;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OrTemplateOrBuilder getOrOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_is = 5;</code>
   * @return Whether the lookaheadIs field is set.
   */
  boolean hasLookaheadIs();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_is = 5;</code>
   * @return The lookaheadIs.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate getLookaheadIs();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_is = 5;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplateOrBuilder getLookaheadIsOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_not = 6;</code>
   * @return Whether the lookaheadNot field is set.
   */
  boolean hasLookaheadNot();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_not = 6;</code>
   * @return The lookaheadNot.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate getLookaheadNot();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplate lookahead_not = 6;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LookaheadTemplateOrBuilder getLookaheadNotOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LongestTemplate longest = 7;</code>
   * @return Whether the longest field is set.
   */
  boolean hasLongest();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LongestTemplate longest = 7;</code>
   * @return The longest.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LongestTemplate getLongest();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LongestTemplate longest = 7;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.LongestTemplateOrBuilder getLongestOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OnlyIfTemplate only_if = 8;</code>
   * @return Whether the onlyIf field is set.
   */
  boolean hasOnlyIf();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OnlyIfTemplate only_if = 8;</code>
   * @return The onlyIf.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OnlyIfTemplate getOnlyIf();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OnlyIfTemplate only_if = 8;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.OnlyIfTemplateOrBuilder getOnlyIfOrBuilder();

  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.UnlessTemplate unless = 9;</code>
   * @return Whether the unless field is set.
   */
  boolean hasUnless();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.UnlessTemplate unless = 9;</code>
   * @return The unless.
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.UnlessTemplate getUnless();
  /**
   * <code>.com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.UnlessTemplate unless = 9;</code>
   */
  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.UnlessTemplateOrBuilder getUnlessOrBuilder();

  com.giyeok.jparser.mgroup3.proto.AcceptConditionTemplate.ConditionCase getConditionCase();
}
