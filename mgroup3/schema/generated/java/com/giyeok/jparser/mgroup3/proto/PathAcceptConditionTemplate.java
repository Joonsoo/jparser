// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mgroup3ParserData.proto

package com.giyeok.jparser.mgroup3.proto;

/**
 * Protobuf type {@code com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate}
 */
public final class PathAcceptConditionTemplate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)
    PathAcceptConditionTemplateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PathAcceptConditionTemplate.newBuilder() to construct.
  private PathAcceptConditionTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PathAcceptConditionTemplate() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PathAcceptConditionTemplate();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_PathAcceptConditionTemplate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_PathAcceptConditionTemplate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.class, com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.Builder.class);
  }

  private int conditionCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object condition_;
  public enum ConditionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LONGEST(1),
    LOOKAHEAD_FOUND(2),
    LOOKAHEAD_NOTFOUND(3),
    EXCEPT(4),
    JOIN(5),
    CONDITION_NOT_SET(0);
    private final int value;
    private ConditionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConditionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ConditionCase forNumber(int value) {
      switch (value) {
        case 1: return LONGEST;
        case 2: return LOOKAHEAD_FOUND;
        case 3: return LOOKAHEAD_NOTFOUND;
        case 4: return EXCEPT;
        case 5: return JOIN;
        case 0: return CONDITION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ConditionCase
  getConditionCase() {
    return ConditionCase.forNumber(
        conditionCase_);
  }

  public static final int LONGEST_FIELD_NUMBER = 1;
  /**
   * <pre>
   * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>bool longest = 1;</code>
   * @return Whether the longest field is set.
   */
  @java.lang.Override
  public boolean hasLongest() {
    return conditionCase_ == 1;
  }
  /**
   * <pre>
   * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>bool longest = 1;</code>
   * @return The longest.
   */
  @java.lang.Override
  public boolean getLongest() {
    if (conditionCase_ == 1) {
      return (java.lang.Boolean) condition_;
    }
    return false;
  }

  public static final int LOOKAHEAD_FOUND_FIELD_NUMBER = 2;
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   * @return Whether the lookaheadFound field is set.
   */
  @java.lang.Override
  public boolean hasLookaheadFound() {
    return conditionCase_ == 2;
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   * @return The lookaheadFound.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadFound() {
    if (conditionCase_ == 2) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadFoundOrBuilder() {
    if (conditionCase_ == 2) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }

  public static final int LOOKAHEAD_NOTFOUND_FIELD_NUMBER = 3;
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   * @return Whether the lookaheadNotfound field is set.
   */
  @java.lang.Override
  public boolean hasLookaheadNotfound() {
    return conditionCase_ == 3;
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   * @return The lookaheadNotfound.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadNotfound() {
    if (conditionCase_ == 3) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadNotfoundOrBuilder() {
    if (conditionCase_ == 3) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }

  public static final int EXCEPT_FIELD_NUMBER = 4;
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   * @return Whether the except field is set.
   */
  @java.lang.Override
  public boolean hasExcept() {
    return conditionCase_ == 4;
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   * @return The except.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarter getExcept() {
    if (conditionCase_ == 4) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getExceptOrBuilder() {
    if (conditionCase_ == 4) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }

  public static final int JOIN_FIELD_NUMBER = 5;
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   * @return Whether the join field is set.
   */
  @java.lang.Override
  public boolean hasJoin() {
    return conditionCase_ == 5;
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   * @return The join.
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarter getJoin() {
    if (conditionCase_ == 5) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   */
  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getJoinOrBuilder() {
    if (conditionCase_ == 5) {
       return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
    }
    return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (conditionCase_ == 1) {
      output.writeBool(
          1, (boolean)((java.lang.Boolean) condition_));
    }
    if (conditionCase_ == 2) {
      output.writeMessage(2, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 3) {
      output.writeMessage(3, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 4) {
      output.writeMessage(4, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 5) {
      output.writeMessage(5, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (conditionCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            1, (boolean)((java.lang.Boolean) condition_));
    }
    if (conditionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    if (conditionCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)) {
      return super.equals(obj);
    }
    com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate other = (com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate) obj;

    if (!getConditionCase().equals(other.getConditionCase())) return false;
    switch (conditionCase_) {
      case 1:
        if (getLongest()
            != other.getLongest()) return false;
        break;
      case 2:
        if (!getLookaheadFound()
            .equals(other.getLookaheadFound())) return false;
        break;
      case 3:
        if (!getLookaheadNotfound()
            .equals(other.getLookaheadNotfound())) return false;
        break;
      case 4:
        if (!getExcept()
            .equals(other.getExcept())) return false;
        break;
      case 5:
        if (!getJoin()
            .equals(other.getJoin())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (conditionCase_) {
      case 1:
        hash = (37 * hash) + LONGEST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLongest());
        break;
      case 2:
        hash = (37 * hash) + LOOKAHEAD_FOUND_FIELD_NUMBER;
        hash = (53 * hash) + getLookaheadFound().hashCode();
        break;
      case 3:
        hash = (37 * hash) + LOOKAHEAD_NOTFOUND_FIELD_NUMBER;
        hash = (53 * hash) + getLookaheadNotfound().hashCode();
        break;
      case 4:
        hash = (37 * hash) + EXCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getExcept().hashCode();
        break;
      case 5:
        hash = (37 * hash) + JOIN_FIELD_NUMBER;
        hash = (53 * hash) + getJoin().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)
      com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_PathAcceptConditionTemplate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_PathAcceptConditionTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.class, com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.Builder.class);
    }

    // Construct using com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (lookaheadFoundBuilder_ != null) {
        lookaheadFoundBuilder_.clear();
      }
      if (lookaheadNotfoundBuilder_ != null) {
        lookaheadNotfoundBuilder_.clear();
      }
      if (exceptBuilder_ != null) {
        exceptBuilder_.clear();
      }
      if (joinBuilder_ != null) {
        joinBuilder_.clear();
      }
      conditionCase_ = 0;
      condition_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.giyeok.jparser.mgroup3.proto.Mgroup3ParserDataOuterClass.internal_static_com_giyeok_jparser_mgroup3_proto_PathAcceptConditionTemplate_descriptor;
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate getDefaultInstanceForType() {
      return com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.getDefaultInstance();
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate build() {
      com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate buildPartial() {
      com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate result = new com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate result) {
      result.conditionCase_ = conditionCase_;
      result.condition_ = this.condition_;
      if (conditionCase_ == 2 &&
          lookaheadFoundBuilder_ != null) {
        result.condition_ = lookaheadFoundBuilder_.build();
      }
      if (conditionCase_ == 3 &&
          lookaheadNotfoundBuilder_ != null) {
        result.condition_ = lookaheadNotfoundBuilder_.build();
      }
      if (conditionCase_ == 4 &&
          exceptBuilder_ != null) {
        result.condition_ = exceptBuilder_.build();
      }
      if (conditionCase_ == 5 &&
          joinBuilder_ != null) {
        result.condition_ = joinBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate) {
        return mergeFrom((com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate other) {
      if (other == com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.getDefaultInstance()) return this;
      switch (other.getConditionCase()) {
        case LONGEST: {
          setLongest(other.getLongest());
          break;
        }
        case LOOKAHEAD_FOUND: {
          mergeLookaheadFound(other.getLookaheadFound());
          break;
        }
        case LOOKAHEAD_NOTFOUND: {
          mergeLookaheadNotfound(other.getLookaheadNotfound());
          break;
        }
        case EXCEPT: {
          mergeExcept(other.getExcept());
          break;
        }
        case JOIN: {
          mergeJoin(other.getJoin());
          break;
        }
        case CONDITION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              condition_ = input.readBool();
              conditionCase_ = 1;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getLookaheadFoundFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getLookaheadNotfoundFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getExceptFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getJoinFieldBuilder().getBuilder(),
                  extensionRegistry);
              conditionCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int conditionCase_ = 0;
    private java.lang.Object condition_;
    public ConditionCase
        getConditionCase() {
      return ConditionCase.forNumber(
          conditionCase_);
    }

    public Builder clearCondition() {
      conditionCase_ = 0;
      condition_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     * <pre>
     * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>bool longest = 1;</code>
     * @return Whether the longest field is set.
     */
    public boolean hasLongest() {
      return conditionCase_ == 1;
    }
    /**
     * <pre>
     * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>bool longest = 1;</code>
     * @return The longest.
     */
    public boolean getLongest() {
      if (conditionCase_ == 1) {
        return (java.lang.Boolean) condition_;
      }
      return false;
    }
    /**
     * <pre>
     * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>bool longest = 1;</code>
     * @param value The longest to set.
     * @return This builder for chaining.
     */
    public Builder setLongest(boolean value) {

      conditionCase_ = 1;
      condition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>bool longest = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLongest() {
      if (conditionCase_ == 1) {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> lookaheadFoundBuilder_;
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     * @return Whether the lookaheadFound field is set.
     */
    @java.lang.Override
    public boolean hasLookaheadFound() {
      return conditionCase_ == 2;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     * @return The lookaheadFound.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadFound() {
      if (lookaheadFoundBuilder_ == null) {
        if (conditionCase_ == 2) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      } else {
        if (conditionCase_ == 2) {
          return lookaheadFoundBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    public Builder setLookaheadFound(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (lookaheadFoundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        lookaheadFoundBuilder_.setMessage(value);
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    public Builder setLookaheadFound(
        com.giyeok.jparser.mgroup3.proto.PathStarter.Builder builderForValue) {
      if (lookaheadFoundBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        lookaheadFoundBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    public Builder mergeLookaheadFound(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (lookaheadFoundBuilder_ == null) {
        if (conditionCase_ == 2 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.newBuilder((com.giyeok.jparser.mgroup3.proto.PathStarter) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 2) {
          lookaheadFoundBuilder_.mergeFrom(value);
        } else {
          lookaheadFoundBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    public Builder clearLookaheadFound() {
      if (lookaheadFoundBuilder_ == null) {
        if (conditionCase_ == 2) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 2) {
          conditionCase_ = 0;
          condition_ = null;
        }
        lookaheadFoundBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.PathStarter.Builder getLookaheadFoundBuilder() {
      return getLookaheadFoundFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadFoundOrBuilder() {
      if ((conditionCase_ == 2) && (lookaheadFoundBuilder_ != null)) {
        return lookaheadFoundBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 2) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> 
        getLookaheadFoundFieldBuilder() {
      if (lookaheadFoundBuilder_ == null) {
        if (!(conditionCase_ == 2)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
        }
        lookaheadFoundBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 2;
      onChanged();
      return lookaheadFoundBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> lookaheadNotfoundBuilder_;
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     * @return Whether the lookaheadNotfound field is set.
     */
    @java.lang.Override
    public boolean hasLookaheadNotfound() {
      return conditionCase_ == 3;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     * @return The lookaheadNotfound.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadNotfound() {
      if (lookaheadNotfoundBuilder_ == null) {
        if (conditionCase_ == 3) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      } else {
        if (conditionCase_ == 3) {
          return lookaheadNotfoundBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    public Builder setLookaheadNotfound(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (lookaheadNotfoundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        lookaheadNotfoundBuilder_.setMessage(value);
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    public Builder setLookaheadNotfound(
        com.giyeok.jparser.mgroup3.proto.PathStarter.Builder builderForValue) {
      if (lookaheadNotfoundBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        lookaheadNotfoundBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    public Builder mergeLookaheadNotfound(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (lookaheadNotfoundBuilder_ == null) {
        if (conditionCase_ == 3 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.newBuilder((com.giyeok.jparser.mgroup3.proto.PathStarter) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 3) {
          lookaheadNotfoundBuilder_.mergeFrom(value);
        } else {
          lookaheadNotfoundBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    public Builder clearLookaheadNotfound() {
      if (lookaheadNotfoundBuilder_ == null) {
        if (conditionCase_ == 3) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 3) {
          conditionCase_ = 0;
          condition_ = null;
        }
        lookaheadNotfoundBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.PathStarter.Builder getLookaheadNotfoundBuilder() {
      return getLookaheadNotfoundFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadNotfoundOrBuilder() {
      if ((conditionCase_ == 3) && (lookaheadNotfoundBuilder_ != null)) {
        return lookaheadNotfoundBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 3) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> 
        getLookaheadNotfoundFieldBuilder() {
      if (lookaheadNotfoundBuilder_ == null) {
        if (!(conditionCase_ == 3)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
        }
        lookaheadNotfoundBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 3;
      onChanged();
      return lookaheadNotfoundBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> exceptBuilder_;
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     * @return Whether the except field is set.
     */
    @java.lang.Override
    public boolean hasExcept() {
      return conditionCase_ == 4;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     * @return The except.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarter getExcept() {
      if (exceptBuilder_ == null) {
        if (conditionCase_ == 4) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      } else {
        if (conditionCase_ == 4) {
          return exceptBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    public Builder setExcept(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (exceptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        exceptBuilder_.setMessage(value);
      }
      conditionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    public Builder setExcept(
        com.giyeok.jparser.mgroup3.proto.PathStarter.Builder builderForValue) {
      if (exceptBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        exceptBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    public Builder mergeExcept(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (exceptBuilder_ == null) {
        if (conditionCase_ == 4 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.newBuilder((com.giyeok.jparser.mgroup3.proto.PathStarter) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 4) {
          exceptBuilder_.mergeFrom(value);
        } else {
          exceptBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    public Builder clearExcept() {
      if (exceptBuilder_ == null) {
        if (conditionCase_ == 4) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 4) {
          conditionCase_ = 0;
          condition_ = null;
        }
        exceptBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.PathStarter.Builder getExceptBuilder() {
      return getExceptFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getExceptOrBuilder() {
      if ((conditionCase_ == 4) && (exceptBuilder_ != null)) {
        return exceptBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 4) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> 
        getExceptFieldBuilder() {
      if (exceptBuilder_ == null) {
        if (!(conditionCase_ == 4)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
        }
        exceptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 4;
      onChanged();
      return exceptBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> joinBuilder_;
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     * @return Whether the join field is set.
     */
    @java.lang.Override
    public boolean hasJoin() {
      return conditionCase_ == 5;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     * @return The join.
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarter getJoin() {
      if (joinBuilder_ == null) {
        if (conditionCase_ == 5) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      } else {
        if (conditionCase_ == 5) {
          return joinBuilder_.getMessage();
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    public Builder setJoin(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (joinBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
        onChanged();
      } else {
        joinBuilder_.setMessage(value);
      }
      conditionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    public Builder setJoin(
        com.giyeok.jparser.mgroup3.proto.PathStarter.Builder builderForValue) {
      if (joinBuilder_ == null) {
        condition_ = builderForValue.build();
        onChanged();
      } else {
        joinBuilder_.setMessage(builderForValue.build());
      }
      conditionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    public Builder mergeJoin(com.giyeok.jparser.mgroup3.proto.PathStarter value) {
      if (joinBuilder_ == null) {
        if (conditionCase_ == 5 &&
            condition_ != com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance()) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.newBuilder((com.giyeok.jparser.mgroup3.proto.PathStarter) condition_)
              .mergeFrom(value).buildPartial();
        } else {
          condition_ = value;
        }
        onChanged();
      } else {
        if (conditionCase_ == 5) {
          joinBuilder_.mergeFrom(value);
        } else {
          joinBuilder_.setMessage(value);
        }
      }
      conditionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    public Builder clearJoin() {
      if (joinBuilder_ == null) {
        if (conditionCase_ == 5) {
          conditionCase_ = 0;
          condition_ = null;
          onChanged();
        }
      } else {
        if (conditionCase_ == 5) {
          conditionCase_ = 0;
          condition_ = null;
        }
        joinBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    public com.giyeok.jparser.mgroup3.proto.PathStarter.Builder getJoinBuilder() {
      return getJoinFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    @java.lang.Override
    public com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getJoinOrBuilder() {
      if ((conditionCase_ == 5) && (joinBuilder_ != null)) {
        return joinBuilder_.getMessageOrBuilder();
      } else {
        if (conditionCase_ == 5) {
          return (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_;
        }
        return com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
     * </pre>
     *
     * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder> 
        getJoinFieldBuilder() {
      if (joinBuilder_ == null) {
        if (!(conditionCase_ == 5)) {
          condition_ = com.giyeok.jparser.mgroup3.proto.PathStarter.getDefaultInstance();
        }
        joinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.giyeok.jparser.mgroup3.proto.PathStarter, com.giyeok.jparser.mgroup3.proto.PathStarter.Builder, com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder>(
                (com.giyeok.jparser.mgroup3.proto.PathStarter) condition_,
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      conditionCase_ = 5;
      onChanged();
      return joinBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)
  }

  // @@protoc_insertion_point(class_scope:com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)
  private static final com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate();
  }

  public static com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PathAcceptConditionTemplate>
      PARSER = new com.google.protobuf.AbstractParser<PathAcceptConditionTemplate>() {
    @java.lang.Override
    public PathAcceptConditionTemplate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PathAcceptConditionTemplate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PathAcceptConditionTemplate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

