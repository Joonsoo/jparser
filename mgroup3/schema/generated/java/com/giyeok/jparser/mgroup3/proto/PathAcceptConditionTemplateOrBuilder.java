// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mgroup3ParserData.proto

package com.giyeok.jparser.mgroup3.proto;

public interface PathAcceptConditionTemplateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>bool longest = 1;</code>
   * @return Whether the longest field is set.
   */
  boolean hasLongest();
  /**
   * <pre>
   * 현재 path가 이후에 다시 finish되는 경우가 있으면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>bool longest = 1;</code>
   * @return The longest.
   */
  boolean getLongest();

  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   * @return Whether the lookaheadFound field is set.
   */
  boolean hasLookaheadFound();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   * @return The lookaheadFound.
   */
  com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadFound();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되어야만 이번 path도 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_found = 2;</code>
   */
  com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadFoundOrBuilder();

  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   * @return Whether the lookaheadNotfound field is set.
   */
  boolean hasLookaheadNotfound();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   * @return The lookaheadNotfound.
   */
  com.giyeok.jparser.mgroup3.proto.PathStarter getLookaheadNotfound();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되면 이번 path는 invalidate한다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter lookahead_notfound = 3;</code>
   */
  com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getLookaheadNotfoundOrBuilder();

  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   * @return Whether the except field is set.
   */
  boolean hasExcept();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   * @return The except.
   */
  com.giyeok.jparser.mgroup3.proto.PathStarter getExcept();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에는 이번 path는 invalid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter except = 4;</code>
   */
  com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getExceptOrBuilder();

  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   * @return Whether the join field is set.
   */
  boolean hasJoin();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   * @return The join.
   */
  com.giyeok.jparser.mgroup3.proto.PathStarter getJoin();
  /**
   * <pre>
   * PathStarter로 만들어진 경로가 finish되는 시점에만 이번 path가 valid하다
   * </pre>
   *
   * <code>.com.giyeok.jparser.mgroup3.proto.PathStarter join = 5;</code>
   */
  com.giyeok.jparser.mgroup3.proto.PathStarterOrBuilder getJoinOrBuilder();

  com.giyeok.jparser.mgroup3.proto.PathAcceptConditionTemplate.ConditionCase getConditionCase();
}
